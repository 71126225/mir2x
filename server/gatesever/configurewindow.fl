# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
header_name {.hpp} 
code_name {.cpp}
decl {\#include <cmath>} {public global
} 

class ConfigureWindow {open
} {
  Function {ConfigureWindow()} {open
  } {
    Fl_Window m_Window {
      label ConfigureWindow open selected
      xywh {333 137 611 313} type Double labelfont 4 visible
    } {
      Fl_Value_Input m_VIPort1 {
        label {Client Port: }
        xywh {147 24 60 24} labelfont 4 minimum 1024 maximum 10000 value 3400 textfont 4
      }
      Fl_Value_Input m_VIPort2 {
        label {Server Port: }
        xywh {147 60 60 24} labelfont 4 minimum 1024 maximum 10000 value 3500 textfont 4
      }
      Fl_Input m_DatabaseIP {
        label {Database IP: }
        xywh {147 95 150 24} labelfont 4 textfont 4
      }
      Fl_Value_Input m_DatabasePort {
        label {Database Port: }
        xywh {147 131 60 24} labelfont 4 minimum 1024 maximum 10000 value 3306 textfont 4
      }
      Fl_Input m_UserName {
        label {User Name: }
        xywh {147 167 150 24} labelfont 4 textfont 4
      }
      Fl_Input m_Password {
        label {Password: }
        xywh {147 203 150 24} type Secret labelfont 4 textfont 4
      }
      Fl_Input m_DatabaseName {
        label {Database Name: }
        xywh {147 239 150 24} labelfont 4 textfont 4
      }
    }
    code {m_DatabaseIP->value("127.0.0.1");
m_UserName->value("root");
m_Password->value("hah86918");
m_DatabaseName->value("mir2x");} {}
  }
  Function {ShowAll()} {open
  } {
    code {{
    m_Window->show();
}} {}
  }
  Function {ClientPort()} {open return_type int
  } {
    code {{
    // printf("%d\\n", std::lround(m_VIPort1->value()));

    return std::lround(m_VIPort1->value());
}} {}
  }
  Function {SceneServerPort()} {open return_type int
  } {
    code {{
    return std::lround(m_VIPort2->value());
}} {}
  }
  Function {DatabasePort()} {open return_type int
  } {
    code {{
    return std::lround(m_DatabasePort->value());
}} {}
  }
  Function {DatabaseIP()} {open return_type {const char *}
  } {
    code {{
    return m_DatabaseIP->value();
}} {}
  }
  Function {DatabaseName()} {open return_type {const char *}
  } {
    code {{
    return m_DatabaseName->value();
}} {}
  }
  Function {UserName()} {open return_type {const char *}
  } {
    code {{
    return m_UserName->value();
}} {}
  }
  Function {Password()} {open return_type {const char *}
  } {
    code {{
    return m_Password->value();
}} {}
  }
} 
