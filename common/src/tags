!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTORDESC	actordesc.hpp	/^}ACTORDESC;$/;"	t	typeref:struct:__anon1
AlphaObjectValid	mir2xmap.hpp	/^        bool AlphaObjectValid(int nX, int nY, int nIndex)$/;"	f	class:Mir2xMap
AniObjectValid	mir2map.cpp	/^bool Mir2Map::AniObjectValid(int nX, int nY, int nIndex, ImageDB &stImageDB)$/;"	f	class:Mir2Map
AniObjectValid	mir2xmap.hpp	/^        bool AniObjectValid(int nX, int nY, int nIndex)$/;"	f	class:Mir2xMap
Back	cachequeue.hpp	/^        T &Back()$/;"	f	class:final
BaseTileInfo	mir2map.hpp	/^        const TILEINFO &BaseTileInfo(int nX, int nY)$/;"	f	class:Mir2Map
CELLDESC	mir2xmap.hpp	/^        }CELLDESC;$/;"	t	class:Mir2xMap	typeref:struct:Mir2xMap::__anon10
CELLINFO	mir2map.hpp	/^}CELLINFO;$/;"	t	typeref:struct:__anon7
CMLogin	message.hpp	/^}CMLogin;$/;"	t	typeref:struct:__anon2
CM_LOGIN	message.hpp	/^    CM_LOGIN,$/;"	e	enum:uint8_t
CM_PING	message.hpp	/^    CM_PING,$/;"	e	enum:uint8_t
CacheQueue	cachequeue.hpp	/^        CacheQueue()$/;"	f	class:final
CalcalatePointInfo	triangle.cpp	/^void Triangle::CalcalatePointInfo()$/;"	f	class:Triangle
CanWalk	mir2xmap.hpp	/^        bool CanWalk(int nX, int nY, int nIndex)$/;"	f	class:Mir2xMap
CellDesc	mir2xmap.hpp	/^        CELLDESC &CellDesc(int nX, int nY)$/;"	f	class:Mir2xMap
CellInfo	mir2map.hpp	/^        const CELLINFO &CellInfo(int nX, int nY)$/;"	f	class:Mir2Map
CharName	message.hpp	/^    char     CharName[32];$/;"	m	struct:__anon3
Clear	cachequeue.hpp	/^        void Clear()$/;"	f	class:final
CloseAllDoor	mir2map.cpp	/^void Mir2Map::CloseAllDoor()$/;"	f	class:Mir2Map
CloseDoor	mir2map.cpp	/^void Mir2Map::CloseDoor(int nX, int nY, uint8_t nDoorIndex)$/;"	f	class:Mir2Map
Color16To32Mapping	wilimagepackage.cpp	/^static uint32_t Color16To32Mapping(uint16_t srcColor, uint32_t chColor)$/;"	f	file:
ColumnCount	dbrecord.cpp	/^int DBRecord::ColumnCount()$/;"	f	class:DBRecord
CreateDBRecord	dbconnection.cpp	/^DBRecord *DBConnection::CreateDBRecord()$/;"	f	class:DBConnection
Current	cachequeue.hpp	/^        T &Current()$/;"	f	class:final
CurrentImageBuffer	wilimagepackage.cpp	/^const uint16_t *WilImagePackage::CurrentImageBuffer()$/;"	f	class:WilImagePackage
CurrentImageInfo	wilimagepackage.cpp	/^const WILIMAGEINFO &WilImagePackage::CurrentImageInfo()$/;"	f	class:WilImagePackage
CurrentImageValid	wilimagepackage.cpp	/^bool WilImagePackage::CurrentImageValid()$/;"	f	class:WilImagePackage
DBConnection	dbconnection.cpp	/^DBConnection::DBConnection($/;"	f	class:DBConnection
DBConnection	dbconnection.hpp	/^class DBConnection$/;"	c
DBRecord	dbrecord.cpp	/^DBRecord::DBRecord(DBConnection * pConnection)$/;"	f	class:DBRecord
DMove	triangle.cpp	/^void Triangle::DMove(double fDX, double fDY)$/;"	f	class:Triangle
Decode	imagedb.cpp	/^const uint32_t *ImageDB::Decode($/;"	f	class:ImageDB
Decode	wilimagepackage.cpp	/^void WilImagePackage::Decode(uint32_t *rectImageBuffer, uint32_t dwColor0, uint32_t dwColor1, uint32_t dwColor2)$/;"	f	class:WilImagePackage
Desc	mir2xmap.hpp	/^            uint16_t    Desc;           \/\/  0x b(87654321) a(87654321)$/;"	m	struct:Mir2xMap::__anon10
Desc	mir2xmap.hpp	/^            uint8_t     Desc;           \/\/ 0x<-87654321:$/;"	m	struct:Mir2xMap::__anon8
Desc	mir2xmap.hpp	/^            uint8_t     Desc;           \/\/ description for animated object$/;"	m	struct:Mir2xMap::__anon9
DestroyDBRecord	dbconnection.cpp	/^void DBConnection::DestroyDBRecord(DBRecord *pDBRecord)$/;"	f	class:DBConnection
Direction	message.hpp	/^    uint8_t  Direction;$/;"	m	struct:__anon3
Done	cachequeue.hpp	/^        bool Done()$/;"	f	class:final
DupFile	filesys.cpp	/^bool DupFile(const char *szDst, const char *szSrc)$/;"	f
ErrorID	dbconnection.cpp	/^int DBConnection::ErrorID()$/;"	f	class:DBConnection
ErrorID	dbrecord.cpp	/^int DBRecord::ErrorID()$/;"	f	class:DBRecord
ErrorInfo	dbconnection.cpp	/^const char *DBConnection::ErrorInfo()$/;"	f	class:DBConnection
ErrorInfo	dbrecord.cpp	/^const char *DBRecord::ErrorInfo()$/;"	f	class:DBRecord
Execute	dbrecord.cpp	/^bool DBRecord::Execute(const char *szQueryCmd, ...)$/;"	f	class:DBRecord
ExtendBuf	imagedb.cpp	/^void ImageDB::ExtendBuf(int nBufLen)$/;"	f	class:ImageDB
ExtendBuf	mir2xmap.cpp	/^void Mir2xMap::ExtendBuf(size_t nSize)$/;"	f	class:Mir2xMap
ExtendQueryBuf	dbrecord.cpp	/^void DBRecord::ExtendQueryBuf(size_t nNewLen)$/;"	f	class:DBRecord
FastDecode	imagedb.cpp	/^const uint32_t *ImageDB::FastDecode(uint8_t nFileIndex, uint32_t nC0, uint32_t nC1, uint32_t nC2)$/;"	f	class:ImageDB
FastH	imagedb.cpp	/^int ImageDB::FastH(uint8_t nFileIndex)$/;"	f	class:ImageDB
FastW	imagedb.cpp	/^int ImageDB::FastW(uint8_t nFileIndex)$/;"	f	class:ImageDB
Fetch	dbrecord.cpp	/^bool DBRecord::Fetch()$/;"	f	class:DBRecord
FileExist	filesys.cpp	/^bool FileExist(const char *szFileName)$/;"	f
FileIndex	mir2xmap.hpp	/^            uint8_t     FileIndex;  $/;"	m	struct:Mir2xMap::__anon9
FileIndex	mir2xmap.hpp	/^            uint8_t     FileIndex;$/;"	m	struct:Mir2xMap::__anon8
Forward	cachequeue.hpp	/^        void Forward()$/;"	f	class:final
Full	cachequeue.hpp	/^        bool Full()$/;"	f	class:final
Get	dbrecord.cpp	/^const char *DBRecord::Get(const char *szColumnName)$/;"	f	class:DBRecord
GetDoor	mir2map.cpp	/^uint8_t Mir2Map::GetDoor(int nXCnt, int nYCnt)$/;"	f	class:Mir2Map
GetDoorImageIndex	mir2map.cpp	/^uint32_t Mir2Map::GetDoorImageIndex(int nX, int nY)$/;"	f	class:Mir2Map
Ground	mir2map.cpp	/^uint8_t Mir2Map::Ground(int nX, int nY)$/;"	f	class:Mir2Map
Ground	mir2xmap.hpp	/^            uint8_t     Ground[4];$/;"	m	struct:Mir2xMap::__anon10
Ground	mir2xmap.hpp	/^        uint8_t Ground(int nX, int nY, int nIndex)$/;"	f	class:Mir2xMap
GroundObjectValid	mir2map.cpp	/^bool Mir2Map::GroundObjectValid(int nX, int nY, int nIndex, ImageDB &stImageDB)$/;"	f	class:Mir2Map
GroundObjectValid	mir2xmap.hpp	/^        bool GroundObjectValid(int nX, int nY, int nIndex)$/;"	f	class:Mir2xMap
GroundValid	mir2map.cpp	/^bool Mir2Map::GroundValid(int nX, int nY)$/;"	f	class:Mir2Map
GroundValid	mir2xmap.hpp	/^        bool GroundValid(int nX, int nY, int nIndex)$/;"	f	class:Mir2xMap
H	imagedb.cpp	/^int ImageDB::H(uint8_t nFileIndex, uint16_t nImageIndex)$/;"	f	class:ImageDB
H	mir2map.hpp	/^        int  H()$/;"	f	class:Mir2Map
H	mir2xmap.hpp	/^        int H()$/;"	f	class:Mir2xMap
Head	cachequeue.hpp	/^        T &Head()$/;"	f	class:final
HexString	hexstring.hpp	/^template<typename T> char *HexString(T nKey, char *szStr)$/;"	f
ID	message.hpp	/^    char ID[16];$/;"	m	struct:__anon2
ImageCount	wilimagepackage.cpp	/^int32_t WilImagePackage::ImageCount()$/;"	f	class:WilImagePackage
ImageDB	imagedb.cpp	/^ImageDB::ImageDB()$/;"	f	class:ImageDB
ImageDB	imagedb.hpp	/^class ImageDB$/;"	c
ImageIndex	mir2xmap.hpp	/^            uint16_t    ImageIndex;$/;"	m	struct:Mir2xMap::__anon8
ImageIndex	mir2xmap.hpp	/^            uint16_t    ImageIndex;$/;"	m	struct:Mir2xMap::__anon9
In	triangle.cpp	/^bool Triangle::In(double fX, double fY) const$/;"	f	class:Triangle
Index	cachequeue.hpp	/^        size_t Index()$/;"	f	class:final
IndexCount	wilimagepackage.cpp	/^int32_t WilImagePackage::IndexCount()$/;"	f	class:WilImagePackage
IntervalOverlap	mathfunc.hpp	/^template<typename T> bool IntervalOverlap(T nfX1, T nfW1, T nfX2, T nfW2)$/;"	f
LIGHTINFO	mir2map.hpp	/^}LIGHTINFO;$/;"	t	typeref:struct:__anon4
Level	message.hpp	/^    uint16_t Level;$/;"	m	struct:__anon3
Light	mir2map.cpp	/^uint16_t Mir2Map::Light(int nX, int nY)$/;"	f	class:Mir2Map
Light	mir2xmap.hpp	/^            uint16_t    Light;$/;"	m	struct:Mir2xMap::__anon10
Light	mir2xmap.hpp	/^        uint16_t Light(int nX, int nY)$/;"	f	class:Mir2xMap
LightValid	mir2map.cpp	/^bool Mir2Map::LightValid(int nX, int nY)$/;"	f	class:Mir2Map
LightValid	mir2xmap.hpp	/^        bool LightValid(int nX, int nY)$/;"	f	class:Mir2xMap
Load	imagedb.cpp	/^bool ImageDB::Load(uint8_t nFileIndex,$/;"	f	class:ImageDB
Load	mir2map.cpp	/^bool Mir2Map::Load(const char *szMapFileName)$/;"	f	class:Mir2Map
Load	mir2xmap.cpp	/^bool Mir2xMap::Load(const char *szFullName)$/;"	f	class:Mir2xMap
Load	wilimagepackage.cpp	/^bool WilImagePackage::Load(const char* wilFilePath, const char *wilFileName, const char *)$/;"	f	class:WilImagePackage
LoadDB	imagedb.cpp	/^bool ImageDB::LoadDB(const char *szPathName)$/;"	f	class:ImageDB
LoadGround	mir2xmap.cpp	/^bool Mir2xMap::LoadGround(uint8_t * &pData)$/;"	f	class:Mir2xMap
LoadHead	mir2xmap.cpp	/^bool Mir2xMap::LoadHead(uint8_t * &pData)$/;"	f	class:Mir2xMap
LoadLight	mir2xmap.cpp	/^bool Mir2xMap::LoadLight(uint8_t * &pData)$/;"	f	class:Mir2xMap
LoadObj	mir2xmap.cpp	/^bool Mir2xMap::LoadObj(uint8_t * &pData, int nObjIndex)$/;"	f	class:Mir2xMap
LoadTile	mir2xmap.cpp	/^bool Mir2xMap::LoadTile(uint8_t * &pData)$/;"	f	class:Mir2xMap
MAPFILEHEADER	mir2map.hpp	/^}MAPFILEHEADER;$/;"	t	typeref:struct:__anon5
MakeDir	filesys.cpp	/^bool MakeDir(const char *szDirName)$/;"	f
MapInfo	mir2map.cpp	/^std::string Mir2Map::MapInfo()$/;"	f	class:Mir2Map
MapName	message.hpp	/^    char     MapName[16];$/;"	m	struct:__anon3
MapX	message.hpp	/^    uint32_t MapX;$/;"	m	struct:__anon3
MapY	message.hpp	/^    uint32_t MapY;$/;"	m	struct:__anon3
MaxX	triangle.cpp	/^double Triangle::MaxX() const$/;"	f	class:Triangle
MaxY	triangle.cpp	/^double Triangle::MaxY() const$/;"	f	class:Triangle
MemSet32	wilimagepackage.cpp	/^static void MemSet32(uint32_t *dst, int n, uint32_t src)$/;"	f	file:
Memcpy16To32	wilimagepackage.cpp	/^static void Memcpy16To32(uint32_t *dst, const uint16_t *src, int32_t n, uint32_t dwColor)$/;"	f	file:
MinX	triangle.cpp	/^double Triangle::MinX() const$/;"	f	class:Triangle
MinY	triangle.cpp	/^double Triangle::MinY() const$/;"	f	class:Triangle
Mir2Map	mir2map.cpp	/^Mir2Map::Mir2Map()$/;"	f	class:Mir2Map
Mir2Map	mir2map.hpp	/^class Mir2Map$/;"	c
Mir2xMap	mir2xmap.cpp	/^Mir2xMap::Mir2xMap()$/;"	f	class:Mir2xMap
Mir2xMap	mir2xmap.hpp	/^class Mir2xMap$/;"	c
OBJDESC	mir2xmap.hpp	/^        }OBJDESC;$/;"	t	class:Mir2xMap	typeref:struct:Mir2xMap::__anon9
Obj	mir2xmap.hpp	/^            OBJDESC     Obj[2];$/;"	m	struct:Mir2xMap::__anon10
Object	mir2map.cpp	/^uint32_t Mir2Map::Object(int nX, int nY, int nIndex)$/;"	f	class:Mir2Map
Object	mir2xmap.hpp	/^        uint32_t Object(int nX, int nY, int nIndex)$/;"	f	class:Mir2xMap
ObjectValid	mir2map.cpp	/^bool Mir2Map::ObjectValid(int nX, int nY, int nIndex, ImageDB &stImageDB)$/;"	f	class:Mir2Map
ObjectValid	mir2xmap.hpp	/^        bool ObjectValid(int nX, int nY, int nIndex)$/;"	f	class:Mir2xMap
OpenAllDoor	mir2map.cpp	/^void Mir2Map::OpenAllDoor()$/;"	f	class:Mir2Map
OpenDoor	mir2map.cpp	/^void Mir2Map::OpenDoor(int nX, int nY, uint8_t nDoorIndex)$/;"	f	class:Mir2Map
Overlap	mir2xmap.cpp	/^bool Mir2xMap::Overlap(int nX, int nY, int nCX, int nCY, int nR)$/;"	f	class:Mir2xMap
Overlap	triangle.cpp	/^bool Triangle::Overlap(const Triangle & stTri) const$/;"	f	class:Triangle
ParseGround	mir2xmap.cpp	/^void Mir2xMap::ParseGround(int nX, int nY, int nSize,$/;"	f	class:Mir2xMap
ParseLight	mir2xmap.cpp	/^void Mir2xMap::ParseLight(int nX, int nY, int nSize,$/;"	f	class:Mir2xMap
ParseObj	mir2xmap.cpp	/^void Mir2xMap::ParseObj(int nX, int nY, int nSize, int nObjIndex,$/;"	f	class:Mir2xMap
ParseTile	mir2xmap.cpp	/^void Mir2xMap::ParseTile(int nX, int nY, int nSize,$/;"	f	class:Mir2xMap
Password	message.hpp	/^    char Password[16];$/;"	m	struct:__anon2
PickOneBit	mir2xmap.hpp	/^        bool PickOneBit(const uint8_t *pData, long nOffset)$/;"	f	class:Mir2xMap
PlatformLinux	platforms.hpp	/^inline bool PlatformLinux()$/;"	f
PlatformWindows	platforms.hpp	/^inline bool PlatformWindows()$/;"	f
Point	triangle.cpp	/^const std::pair<double, double> &Triangle::Point(int nIndex) const$/;"	f	class:Triangle
PointInCircle	mathfunc.hpp	/^template<typename T> bool PointInCircle(T nfX, T nfY, T nfCX, T nfCY, T nfR)$/;"	f
PointInRectangle	mathfunc.hpp	/^template<typename T> bool PointInRectangle(T nfX, T nfY, T nStartX, T nStartY, T nfW, T nfH)$/;"	f
PointInSegment	mathfunc.hpp	/^template<typename T> bool PointInSegment(T nfX, T nfStartX, T nfW)$/;"	f
PointInTriangle	mathfunc.hpp	/^template<typename T> bool PointInTriangle(T nfX, T nfY, T nfX1, T nfY1, T nfX2, T nfY2, T nfX3, T nfY3)$/;"	f
PushHead	cachequeue.hpp	/^        void PushHead(T stT)$/;"	f	class:final
Query	dbrecord.cpp	/^bool DBRecord::Query(const char *szQueryCmd)$/;"	f	class:DBRecord
RectangleOverlap	mathfunc.hpp	/^template<typename T> bool RectangleOverlap(T nfX1, T nfY1, T nfW1, T nfH1, T nfX2, T nfY2, T nfW2, T nfH2)$/;"	f
RemoveDir	filesys.cpp	/^bool RemoveDir(const char *szAbsolutePath)$/;"	f
Reset	cachequeue.hpp	/^        void Reset()$/;"	f	class:final
RowCount	dbrecord.cpp	/^int DBRecord::RowCount()$/;"	f	class:DBRecord
SID	message.hpp	/^    uint32_t SID;$/;"	m	struct:__anon3
SMLoginOK	message.hpp	/^}SMLoginOK;$/;"	t	typeref:struct:__anon3
SM_LOGINFAIL	message.hpp	/^    SM_LOGINFAIL,$/;"	e	enum:uint8_t
SM_LOGINOK	message.hpp	/^    SM_LOGINOK,$/;"	e	enum:uint8_t
SM_PING	message.hpp	/^    SM_PING,$/;"	e	enum:uint8_t
SaveRGBABufferToPNG	savepng.cpp	/^bool SaveRGBABufferToPNG(const uint8_t *rgbaBuff, uint32_t nW, uint32_t nH, const char *fileFullName)$/;"	f
SetGround	mir2xmap.cpp	/^void Mir2xMap::SetGround(int nX, int nY, int nSize, bool bHasInfo, uint8_t nGroundInfo)$/;"	f	class:Mir2xMap
SetIndex	wilimagepackage.cpp	/^bool WilImagePackage::SetIndex(uint32_t dwIndex)$/;"	f	class:WilImagePackage
SetLight	mir2xmap.cpp	/^void Mir2xMap::SetLight(int nX, int nY, int nSize, const uint8_t *pData, long &nDataOff)$/;"	f	class:Mir2xMap
SetObj	mir2xmap.cpp	/^void Mir2xMap::SetObj(int nX, int nY, int nObjIndex, int nSize,$/;"	f	class:Mir2xMap
SetOneGround	mir2xmap.cpp	/^void Mir2xMap::SetOneGround(int nX, int nY, int nIndex, bool bHasInfo, uint8_t nGroundInfo)$/;"	f	class:Mir2xMap
SetTile	mir2xmap.cpp	/^void Mir2xMap::SetTile(int nX, int nY, int nSize, const uint8_t *pData, long &nDataOff)$/;"	f	class:Mir2xMap
ShadowDecode	wilimagepackage.cpp	/^void WilImagePackage::ShadowDecode(uint32_t *rectImageBuffer, bool, uint32_t dwColor1, uint32_t dwColor2)$/;"	f	class:WilImagePackage
Size	actordesc.hpp	/^    uint8_t     Size;$/;"	m	struct:__anon1
Size	cachequeue.hpp	/^        bool Size()$/;"	f	class:final
Speed	actordesc.hpp	/^    uint8_t     Speed;$/;"	m	struct:__anon1
StoreResult	dbrecord.cpp	/^bool DBRecord::StoreResult()$/;"	f	class:DBRecord
StringHex	hexstring.cpp	/^uint32_t StringHex(const char *szStr, size_t nLen)$/;"	f
SwapHead	cachequeue.hpp	/^        void SwapHead(size_t nIndex)$/;"	f	class:final
TILEDESC	mir2xmap.hpp	/^        }TILEDESC;$/;"	t	class:Mir2xMap	typeref:struct:Mir2xMap::__anon8
TILEINFO	mir2map.hpp	/^}TILEINFO;$/;"	t	typeref:struct:__anon6
Tile	mir2map.cpp	/^uint32_t Mir2Map::Tile(int nX, int nY)$/;"	f	class:Mir2Map
Tile	mir2xmap.hpp	/^        uint32_t Tile(int nX, int nY)$/;"	f	class:Mir2xMap
TileDesc	mir2xmap.hpp	/^        TILEDESC &TileDesc(int nX, int nY)$/;"	f	class:Mir2xMap
TileValid	mir2map.cpp	/^bool Mir2Map::TileValid(int nX, int nY, ImageDB &stImageDB)$/;"	f	class:Mir2Map
TileValid	mir2xmap.hpp	/^        bool TileValid(int nX, int nY)$/;"	f	class:Mir2xMap
Triangle	triangle.cpp	/^Triangle::Triangle($/;"	f	class:Triangle
UID	message.hpp	/^    uint32_t UID;$/;"	m	struct:__anon3
UNUSED	supwarning.hpp	24;"	d
Valid	dbconnection.cpp	/^bool DBConnection::Valid()$/;"	f	class:DBConnection
Valid	dbrecord.cpp	/^bool DBRecord::Valid()$/;"	f	class:DBRecord
Valid	imagedb.cpp	/^bool ImageDB::Valid(uint8_t nFileIndex, uint16_t nImageIndex)$/;"	f	class:ImageDB
Valid	mir2map.hpp	/^        bool Valid()$/;"	f	class:Mir2Map
Valid	mir2xmap.hpp	/^        bool Valid()$/;"	f	class:Mir2xMap
ValidC	mir2map.hpp	/^        bool ValidC(int nX, int nY)$/;"	f	class:Mir2Map
ValidC	mir2xmap.hpp	/^        bool ValidC(int nX, int nY)$/;"	f	class:Mir2xMap
ValidP	mir2map.hpp	/^        bool ValidP(int nX, int nY)$/;"	f	class:Mir2Map
ValidP	mir2xmap.hpp	/^        bool ValidP(int nX, int nY)$/;"	f	class:Mir2xMap
Version	wilimagepackage.cpp	/^int16_t WilImagePackage::Version()$/;"	f	class:WilImagePackage
W	imagedb.cpp	/^int ImageDB::W(uint8_t nFileIndex, uint16_t nImageIndex)$/;"	f	class:ImageDB
W	mir2map.hpp	/^        int  W()$/;"	f	class:Mir2Map
W	mir2xmap.hpp	/^        int W()$/;"	f	class:Mir2xMap
WILFILEHEADER	wilimagepackage.hpp	/^}WILFILEHEADER;$/;"	t	typeref:struct:__anon11
WILIMAGEINFO	wilimagepackage.hpp	/^}WILIMAGEINFO;$/;"	t	typeref:struct:__anon13
WIXIMAGEINFO	wilimagepackage.hpp	/^}WIXIMAGEINFO;$/;"	t	typeref:struct:__anon12
WilImagePackage	wilimagepackage.cpp	/^WilImagePackage::WilImagePackage()$/;"	f	class:WilImagePackage
WilImagePackage	wilimagepackage.hpp	/^class WilImagePackage$/;"	c
_CRT_SECURE_NO_DEPRECATE	filesys.cpp	22;"	d	file:
bDoorIndex	mir2map.hpp	/^    uint16_t    bDoorIndex;$/;"	m	struct:__anon7
bDoorOffset	mir2map.hpp	/^    uint8_t     bDoorOffset;$/;"	m	struct:__anon7
bFileIndex	mir2map.hpp	/^    uint8_t     bFileIndex;$/;"	m	struct:__anon6
bFlag	mir2map.hpp	/^    uint8_t     bFlag;$/;"	m	struct:__anon7
bIsLight	mir2map.hpp	/^    int32_t     bIsLight;$/;"	m	struct:__anon4
bObj1Ani	mir2map.hpp	/^    uint8_t     bObj1Ani;$/;"	m	struct:__anon7
bObj2Ani	mir2map.hpp	/^    uint8_t     bObj2Ani;$/;"	m	struct:__anon7
bShadow	wilimagepackage.hpp	/^    char        bShadow;                    $/;"	m	struct:__anon13
cEventFileIndex	mir2map.hpp	/^    char        cEventFileIndex;$/;"	m	struct:__anon5
cFogColor	mir2map.hpp	/^    char        cFogColor;$/;"	m	struct:__anon5
cLightColorType	mir2map.hpp	/^    char        cLightColorType;$/;"	m	struct:__anon4
cLightSizeType	mir2map.hpp	/^    char        cLightSizeType;$/;"	m	struct:__anon4
dwImageLength	wilimagepackage.hpp	/^    uint32_t    dwImageLength;$/;"	m	struct:__anon13
final	cachequeue.hpp	/^class CacheQueue final$/;"	c
final	dbrecord.hpp	/^class DBRecord final$/;"	c
final	triangle.hpp	/^class Triangle final$/;"	c
m_Buf	imagedb.hpp	/^        uint32_t *m_Buf;$/;"	m	class:ImageDB
m_Buf	mir2xmap.hpp	/^        uint8_t    *m_Buf;$/;"	m	class:Mir2xMap
m_BufLen	imagedb.hpp	/^        int m_BufLen;$/;"	m	class:ImageDB
m_BufMaxSize	mir2xmap.hpp	/^        size_t      m_BufMaxSize;$/;"	m	class:Mir2xMap
m_BufSize	mir2xmap.hpp	/^        size_t      m_BufSize;$/;"	m	class:Mir2xMap
m_CellDesc	mir2xmap.hpp	/^        CELLDESC   *m_CellDesc;$/;"	m	class:Mir2xMap
m_CheckCount	cachequeue.hpp	/^        int              m_CheckCount;$/;"	m	class:final
m_CircleQ	cachequeue.hpp	/^        std::array<T, N> m_CircleQ;$/;"	m	class:final
m_Connection	dbrecord.hpp	/^        DBConnection   *m_Connection;$/;"	m	class:final
m_Current	cachequeue.hpp	/^        int              m_Current;$/;"	m	class:final
m_CurrentImageBuffer	wilimagepackage.hpp	/^        uint16_t    *m_CurrentImageBuffer;$/;"	m	class:WilImagePackage
m_CurrentImageBufferLength	wilimagepackage.hpp	/^        uint32_t     m_CurrentImageBufferLength;$/;"	m	class:WilImagePackage
m_CurrentImageIndex	wilimagepackage.hpp	/^        uint32_t     m_CurrentImageIndex;$/;"	m	class:WilImagePackage
m_CurrentImageValid	wilimagepackage.hpp	/^        bool         m_CurrentImageValid;$/;"	m	class:WilImagePackage
m_CurrentRow	dbrecord.hpp	/^        MYSQL_ROW       m_CurrentRow;$/;"	m	class:final
m_CurrentWilImageInfo	wilimagepackage.hpp	/^        WILIMAGEINFO    m_CurrentWilImageInfo;$/;"	m	class:WilImagePackage
m_DumbWilImageInfo	wilimagepackage.hpp	/^        WILIMAGEINFO    m_DumbWilImageInfo;$/;"	m	class:WilImagePackage
m_FP	wilimagepackage.hpp	/^        FILE        *m_FP;$/;"	m	class:WilImagePackage
m_H	mir2xmap.hpp	/^        uint16_t    m_H;$/;"	m	class:Mir2xMap
m_Head	cachequeue.hpp	/^        int              m_Head;$/;"	m	class:final
m_ImageCount	wilimagepackage.hpp	/^        int32_t      m_ImageCount;$/;"	m	class:WilImagePackage
m_ImagePackage	imagedb.hpp	/^        std::array<WilImagePackage, 256> m_ImagePackage;$/;"	m	class:ImageDB
m_MaxX	triangle.hpp	/^        double m_MaxX;$/;"	m	class:final
m_MaxY	triangle.hpp	/^        double m_MaxY;$/;"	m	class:final
m_MinX	triangle.hpp	/^        double m_MinX;$/;"	m	class:final
m_MinY	triangle.hpp	/^        double m_MinY;$/;"	m	class:final
m_PointV	triangle.hpp	/^        std::array<std::pair<double, double>, 3> m_PointV;$/;"	m	class:final
m_QueryBuf	dbrecord.hpp	/^        char   *m_QueryBuf;$/;"	m	class:final
m_QueryBufLen	dbrecord.hpp	/^        size_t  m_QueryBufLen;$/;"	m	class:final
m_QuerySucceed	dbrecord.hpp	/^        bool    m_QuerySucceed;$/;"	m	class:final
m_SQL	dbconnection.hpp	/^        MYSQL   *m_SQL;$/;"	m	class:DBConnection
m_SQLRES	dbrecord.hpp	/^        MYSQL_RES      *m_SQLRES;$/;"	m	class:final
m_Size	cachequeue.hpp	/^        size_t           m_Size;$/;"	m	class:final
m_TileDesc	mir2xmap.hpp	/^        TILEDESC   *m_TileDesc;$/;"	m	class:Mir2xMap
m_Valid	dbconnection.hpp	/^        bool     m_Valid;$/;"	m	class:DBConnection
m_Valid	dbrecord.hpp	/^        bool    m_Valid;$/;"	m	class:final
m_Valid	mir2map.hpp	/^        bool            m_Valid;$/;"	m	class:Mir2Map
m_Valid	mir2xmap.hpp	/^        bool        m_Valid;$/;"	m	class:Mir2xMap
m_ValidExecuteString	dbrecord.hpp	/^        bool    m_ValidExecuteString;$/;"	m	class:final
m_Version	wilimagepackage.hpp	/^        int16_t      m_Version;$/;"	m	class:WilImagePackage
m_W	mir2xmap.hpp	/^        uint16_t    m_W;$/;"	m	class:Mir2xMap
m_WixImageInfo	wilimagepackage.hpp	/^        WIXIMAGEINFO    m_WixImageInfo;$/;"	m	class:WilImagePackage
m_bAniTileFrame	mir2xmap.hpp	/^        uint8_t     m_bAniTileFrame[8][16];$/;"	m	class:Mir2xMap
m_dwAniSaveTime	mir2xmap.hpp	/^        uint32_t    m_dwAniSaveTime[8];$/;"	m	class:Mir2xMap
m_pstCellInfo	mir2map.hpp	/^        CELLINFO       *m_pstCellInfo;$/;"	m	class:Mir2Map
m_pstTileInfo	mir2map.hpp	/^        TILEINFO       *m_pstTileInfo;$/;"	m	class:Mir2Map
m_stMapFileHeader	mir2map.hpp	/^        MAPFILEHEADER   m_stMapFileHeader;$/;"	m	class:Mir2Map
nImageCount	wilimagepackage.hpp	/^    int32_t     nImageCount;$/;"	m	struct:__anon11
nIndexCount	wilimagepackage.hpp	/^    int32_t     nIndexCount;$/;"	m	struct:__anon12
pnPosition	wilimagepackage.hpp	/^    int32_t*    pnPosition;$/;"	m	struct:__anon12
shComp	wilimagepackage.hpp	/^    int16_t     shComp;$/;"	m	struct:__anon11
shHeight	mir2map.hpp	/^    int16_t     shHeight;$/;"	m	struct:__anon5
shHeight	wilimagepackage.hpp	/^    int16_t     shHeight;$/;"	m	struct:__anon13
shPX	wilimagepackage.hpp	/^    int16_t     shPX;$/;"	m	struct:__anon13
shPY	wilimagepackage.hpp	/^    int16_t     shPY;$/;"	m	struct:__anon13
shShadowPX	wilimagepackage.hpp	/^    int16_t     shShadowPX;$/;"	m	struct:__anon13
shShadowPY	wilimagepackage.hpp	/^    int16_t     shShadowPY;$/;"	m	struct:__anon13
shVer	wilimagepackage.hpp	/^    int16_t     shVer;$/;"	m	struct:__anon11
shWidth	mir2map.hpp	/^    int16_t     shWidth;$/;"	m	struct:__anon5
shWidth	wilimagepackage.hpp	/^    int16_t     shWidth;$/;"	m	struct:__anon13
szDesc	mir2map.hpp	/^    char        szDesc[20];$/;"	m	struct:__anon5
szTitle	wilimagepackage.hpp	/^    char        szTitle[20];$/;"	m	struct:__anon11
szTitle	wilimagepackage.hpp	/^    char        szTitle[20];$/;"	m	struct:__anon12
uint8_t	message.hpp	/^enum: uint8_t$/;"	g
wAttr	mir2map.hpp	/^    uint16_t    wAttr;$/;"	m	struct:__anon5
wFileIndex	mir2map.hpp	/^    uint16_t    wFileIndex;$/;"	m	struct:__anon7
wLightNEvent	mir2map.hpp	/^    uint16_t    wLightNEvent;$/;"	m	struct:__anon7
wObj1	mir2map.hpp	/^    uint16_t    wObj1;$/;"	m	struct:__anon7
wObj2	mir2map.hpp	/^    uint16_t    wObj2;$/;"	m	struct:__anon7
wTileIndex	mir2map.hpp	/^    uint16_t    wTileIndex;$/;"	m	struct:__anon6
~DBConnection	dbconnection.cpp	/^DBConnection::~DBConnection()$/;"	f	class:DBConnection
~DBRecord	dbrecord.cpp	/^DBRecord::~DBRecord()$/;"	f	class:DBRecord
~ImageDB	imagedb.cpp	/^ImageDB::~ImageDB()$/;"	f	class:ImageDB
~Mir2Map	mir2map.cpp	/^Mir2Map::~Mir2Map()$/;"	f	class:Mir2Map
~Mir2xMap	mir2xmap.cpp	/^Mir2xMap::~Mir2xMap()$/;"	f	class:Mir2xMap
~Triangle	triangle.cpp	/^Triangle::~Triangle()$/;"	f	class:Triangle
~WilImagePackage	wilimagepackage.cpp	/^WilImagePackage::~WilImagePackage()$/;"	f	class:WilImagePackage
