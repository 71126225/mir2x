# data file for the Fltk User Interface Designer (fluid)
version 1.0400
header_name {.h}
code_name {.cxx}
decl {\#include <array>} {public global
}

decl {\#include <optional>} {public global
}

decl {\#include "flwrapper.hpp"} {public global
}

widget_class QD_Transition {
  xywh {2661 400 490 140} resizable visible position_relative_rescale
} {
  decl {std::optional<std::array<int, 2>> m_lastDragLoc;} {private local
  }
  Fl_Box m_dragBox {
    label {@>}
    xywh {0 0 35 140} box UP_BOX
  }
  Fl_Button {} {
    label button
    callback {{
    size(w() + 2, h() + 2);
    parent()->redraw();
}}
    xywh {35 70 140 35}
  }
  Fl_Button {} {
    label button
    callback {{
    size(w() - 2, h() - 2);
    parent()->redraw();
}}
    xywh {35 105 140 35}
  }
  Fl_Button {} {
    label button
    callback {{
    size(w() + 2, h() + 2);
    parent()->redraw();
}}
    xywh {175 70 90 70}
  }
  Fl_Group {} {
    xywh {35 0 230 35}
    code0 {\#include "qdcondchecker_level.hpp"}
    class QD_CondChecker_level
  } {}
  Fl_Group {} {
    xywh {35 35 230 35}
    code0 {\#include "qdcondchecker_hasitem.hpp"}
    class QD_CondChecker_hasItem
  } {}
  Fl_Group {} {
    label {设置条件触发逻辑}
    xywh {265 0 225 140} labeltype NO_LABEL
    code0 {\#include "qdinputtextbutton.hpp"}
    class QD_InputTextButton
  } {}
  Function {handle(int event)} {return_type int
  } {
    code {int result = Fl_Group::handle(event);
if(Fl::event_button() == FL_LEFT_MOUSE){
    switch(event){
        case FL_PUSH:
            {
                m_lastDragLoc = {Fl::event_x(), Fl::event_y()};
                result = 1;
                break;
            }
        case FL_DRAG:
            {
                if(m_lastDragLoc.has_value()){
                    const int ex = Fl::event_x();
                    const int ey = Fl::event_y();

                    const int xdiff = ex - m_lastDragLoc.value()[0];
                    const int ydiff = ey - m_lastDragLoc.value()[1];

                    position(x() + xdiff, y() + ydiff);
                    parent()->redraw();

                    m_lastDragLoc = {ex, ey};
                }
                else{
                    m_lastDragLoc = {Fl::event_x(), Fl::event_y()};
                }

                result = 1;
                break;
            }
        case FL_RELEASE:
            {
                m_lastDragLoc.reset();
                result = 1;
                break;
            }
        default:
            {
                break;
            }
    }
}
else if(Fl::event_button() == FL_RIGHT_MOUSE){
    switch(event){
        case FL_PUSH:
            {
                fl_wrapper::menu_item rclick_menu[]
                {
                    // have to put verbose zeros here
                    // otherwse gcc gives -Werror=missing-field-initializers for tailing fields

                    {"Edit this box", 0, 0, 0, FL_MENU_INACTIVE|FL_MENU_DIVIDER},
                    {"Add input box", 0, +[](Fl_Widget *, void *)
                    {
                    }},

                    {"Add output box", 0, +[](Fl_Widget *, void *)
                    {
                    }},

                    {},
                };

                if(const Fl_Menu_Item *m = rclick_menu->popup(Fl::event_x(), Fl::event_y(), 0, 0, 0); m){
                    m->do_callback(this, m->user_data());
                    redraw();
                }
                break;
            }
        default:
            {
                break;
            }
    }
}
return result;} {}
  }
}
